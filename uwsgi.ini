[uwsgi]
project = mysite3
# Set the project name

uid = www-data
gid = www-data
# Set the user and group ID for the web process

base = /home/www/
# Set the base path for the project

chdir = %(base)%(project)
# Set the working directory for the process, i.e. the project directory

module = %(project).wsgi:application
# Specify the Python module and callable object for the WSGI application

master = True
# Enable master process management mode

process = 2
# Set the number of worker processes to be generated

socket = 0.0.0.0:8000
# Set the address and port number for the web server to listen on

chown-socket = %(uid):www-data
# Set the user and group ID for the web server socket

chmod-socket=600
# Set the file permissions for the web server socket

buffer-size = 65536
# Set the buffer size

pidfile = /tmp/%(project)-master.pid
# Set the path for the master process PID file

daemonize=/tmp/%(project)-uwsgi.log
# Run as a daemon and write logs to a file in the temp folder

vacuum=True
# Rewrite all opened files

max-requests=5000
# Set the maximum number of requests served by a single worker process

harakiri=60
# Set the timeout for an individual request. Requests that exceed this timeout are dropped.

post buffering=8678
# Control the buffering of requests, useful for file uploads

harakiri-verbose=true
# Output a log when a request has been dropped due to the harakiri timeout

memory-report=true
# Enable memory usage reporting

reload-mercy=10
# Set the wait time (in seconds) for a graceful restart, i.e. waiting for currently running requests to finish before restarting.

reload-on-as=1024
# Restart worker processes if they use more than N MB of virtual memory.
